---
import PageCover from "$components/PageCover.svelte";
import Layout from "$layouts/Layout.astro"
import { contentfulClient, type BlogPost } from "$lib/contentful";
import { formatDate, image } from "$lib/utils";
import { documentToHtmlString } from "@contentful/rich-text-html-renderer";
import type { InferGetStaticPropsType } from "astro";
import { BLOCKS } from "@contentful/rich-text-types";

import PostContent from "$components/PostContent.svelte";
import Separator from "$components/Separator.svelte";
import PostNavigation from "$components/PostNavigation.astro";
import Comments from "$components/Comments.svelte";

type Props = InferGetStaticPropsType<typeof getStaticPaths>;

export async function getStaticPaths() {
  const entries = await contentfulClient.getEntries<BlogPost>({
    content_type: "blogPost",
  });

  const pages = entries.items.map(item => ({
    params: { slug: item.fields.slug },
    props: {
      title: item.fields.title,
      date: formatDate(item.fields.date),
      cover: item.fields.cover?.fields.file?.url,
      destination: item.fields.destination?.fields.slug,
      podcast: item.fields.podcast ?? [],
      content: documentToHtmlString(item.fields.content, {
        renderNode: {
          [BLOCKS.EMBEDDED_ASSET]: (node) => {
            const url = node.data.target.fields.file?.url;
            const alt = node.data.target.fields.title ?? "";

            return (
              url ?

              // Actual image
              `<img
                onload="console.log("Image loaded");"
                alt="${alt}"
                data-src="${image(url)}"
                class="w-full h-full object-cover dark:text-white"
              />` :

              // Placeholder
              `<div
                class="border-dashed border-neutral dark:border-white border-2 w-full h-96 flex justify-center items-center my-xxs"
              >
                <h1 class="font-semibold text-xl">Sorry, it looks like no image was found :(</h1>
              </div>`
            );
          },
        },
      }),
    },
  }));

  return pages;
}

const { slug } = Astro.params;
const { content, title, date, cover, destination, podcast } = Astro.props;
---

<Layout {title}>
  <PageCover src={cover} slot="before-content">
    <div class="uppercase font-normal text-lg font-jost tracking-widest space-y-xxs px-md">
      <time class="inline">{date}</time>
      <span>|</span>
      <a href={`/destinations/${destination}`} class="inline">
        {destination}
      </a>

      <h1 class="font-semibold text-3xl">{title}</h1>
    </div>
  </PageCover>

  <PostContent client:load {content} {podcast} />
  <Separator class="lg:mx-lg w-auto" />
  <Comments client:visible {slug} />
  <PostNavigation {slug} />
</Layout>
